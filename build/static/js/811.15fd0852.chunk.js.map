{"version":3,"file":"static/js/811.15fd0852.chunk.js","mappings":"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","sources":["components/FloatingLabel.js","components/IsConfirm.js","pages/UserAddress/Address.js","pages/UserAddress/AddressForm.js","utils/isEmpty.js"],"sourcesContent":["import { FloatingLabel, Form, InputGroup } from \"react-bootstrap\";\nimport { VscDebugRestart } from \"react-icons/vsc\";\n\nconst MyFloatingLabel = ({\n  type = \"text\",\n  label = \"Example\",\n  feedback,\n  onChange,\n  floating,\n  prefix,\n  suffix,\n  reset,\n  // pattern = /[^a-zA-Z0-9_ @.]/m,\n  children,\n  ...props\n}) => {\n  const handleChange = (e) => {\n    const { value, files } = e.target;\n    // console.log(\"VALUE>>\", value);\n\n    // if (type === \"currency\") {\n    //   const currencyPattern = /^(?!,$)[\\d,]*\\.?[\\d]+$/;\n    //   if (!currencyPattern.test(value)) return;\n    //   return onChange(value.toCurrency());\n    // }\n\n    if (type === \"file\") return onChange(files);\n\n    const numberPattern = /^\\d+$/i;\n    if (type === \"number\" && !numberPattern.test(value)) return;\n\n    const inputPattern = /[^\\w\\s@.]/i;\n    if (type === \"text\" && inputPattern.test(value)) return;\n\n    const emailInput = /[^\\w@.]/i;\n    if (type === \"email\" && emailInput.test(value)) return;\n\n    onChange(value);\n  };\n\n  const component = (\n    <>\n      <Form.Control\n        {...props}\n        type={type}\n        placeholder={label}\n        isInvalid={!!feedback}\n        onChange={handleChange}\n      />\n      <Form.Control.Feedback\n        type=\"invalid\"\n        style={{ marginTop: floating ? \"0\" : \"2.2rem\" }}\n      >\n        {feedback}\n      </Form.Control.Feedback>\n      {children}\n    </>\n  );\n\n  return (\n    <Form.Group className=\"mb-4\">\n      <InputGroup>\n        {prefix && <InputGroup.Text>{prefix}</InputGroup.Text>}\n        {floating ? (\n          <FloatingLabel label={label}>{component}</FloatingLabel>\n        ) : (\n          component\n        )}\n\n        {suffix && <InputGroup.Text>{suffix}</InputGroup.Text>}\n        {reset && (\n          <InputGroup.Text>\n            <VscDebugRestart\n              color=\"black\"\n              className=\"pointer\"\n              onClick={reset}\n            />\n          </InputGroup.Text>\n        )}\n      </InputGroup>\n    </Form.Group>\n  );\n};\n\nexport default MyFloatingLabel;\n","import { Modal } from \"react-bootstrap\";\r\nimport Button from \"./Button\";\r\n\r\nexport default function IsConfirm({ show, setShow, onConfirm }) {\r\n  return (\r\n    <Modal show={show} onHide={() => setShow(false)} centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Delete Address</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>Are you sure?</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"light\" onClick={() => setShow(false)}>\r\n          CANCEL\r\n        </Button>\r\n        <Button\r\n          onClick={() => {\r\n            setShow(false);\r\n            onConfirm();\r\n          }}\r\n        >\r\n          YES\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}","import { useState } from \"react\";\r\nimport { Card, Col, Container, Row } from \"react-bootstrap\";\r\nimport { AiOutlineEdit } from \"react-icons/ai\";\r\nimport { ImBin } from \"react-icons/im\";\r\nimport { useAllAddress, useRemoveAddress, useUpdateAddress } from \"../../api\";\r\nimport Button from \"../../components/Button\";\r\nimport IsConfirm from \"../../components/IsConfirm\";\r\nimport Loading from \"../../components/Loading\";\r\nimport AddressForm from \"./AddressForm\";\r\n\r\nexport default function Address() {\r\n  const [edit, setEdit] = useState(false);\r\n  const [add, setAdd] = useState(false);\r\n  const [editData, setEditData] = useState({});\r\n  const [showDelete, setShowDelete] = useState(false);\r\n  const [showDeleteData, setShowDeleteData] = useState(\"\");\r\n\r\n  const { data: address, isLoading } = useAllAddress();\r\n  const { mutate: remove } = useRemoveAddress();\r\n\r\n  const { mutate: update } = useUpdateAddress(showDeleteData);\r\n  const handleSetDefault = () => update({ isDefault: true });\r\n\r\n  if (isLoading) return <Loading />;\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Row>\r\n          <Col className=\"text-right\">\r\n            <Button onClick={() => setAdd(true)}>+ Add New Address</Button>\r\n          </Col>\r\n        </Row>\r\n        {address?.map((data, idx) => (\r\n          <Card\r\n            key={idx}\r\n            className=\"mb-3 py-1 px-2 mx-auto\"\r\n            style={{ width: \"35rem\" }}\r\n          >\r\n            <Row>\r\n              <Col>\r\n                <Card.Title className=\"text-capitalize\">\r\n                  {data.consignee} | {data.contact}\r\n                </Card.Title>\r\n                <p>\r\n                  {data.address}, {data.city}, {data.postcode}, {data.country}.\r\n                </p>\r\n              </Col>\r\n              <Col className=\"text-right\" md={4}>\r\n                <Row>\r\n                  <Col>\r\n                    <AiOutlineEdit\r\n                      className=\"pointer\"\r\n                      size=\"2rem\"\r\n                      onClick={() => {\r\n                        setEdit(true);\r\n                        setEditData(data);\r\n                      }}\r\n                    />\r\n                    {!data.isDefault && (\r\n                      <ImBin\r\n                        className=\"pointer\"\r\n                        size=\"2rem\"\r\n                        onClick={() => {\r\n                          setShowDelete(true);\r\n                          setShowDeleteData(data.id);\r\n                        }}\r\n                      />\r\n                    )}\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <Button\r\n                      variant=\"outline-secondary\"\r\n                      size=\"sm\"\r\n                      disabled={data.isDefault}\r\n                      onClick={async () => {\r\n                        await setShowDeleteData(data.id);\r\n                        handleSetDefault();\r\n                      }}\r\n                    >\r\n                      Set Default\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n          </Card>\r\n        ))}\r\n      </Container>\r\n      <IsConfirm\r\n        show={showDelete}\r\n        setShow={setShowDelete}\r\n        onConfirm={() => remove(showDeleteData)}\r\n      />\r\n      <AddressForm show={add} setShow={setAdd} />\r\n      <AddressForm show={edit} setShow={setEdit} data={editData} />\r\n    </>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { Col, Form, Modal, Row } from \"react-bootstrap\";\r\nimport { useAddAddress, useUpdateAddress } from \"../../api\";\r\nimport Button from \"../../components/Button\";\r\nimport FloatingLabel from \"../../components/FloatingLabel\";\r\nimport isEmpty from \"../../utils/isEmpty\";\r\n\r\nexport default function AddressForm({ show, setShow, data }) {\r\n  const {\r\n    id,\r\n    consignee: old_consignee,\r\n    address: old_address,\r\n    city: old_city,\r\n    postcode: old_postcode,\r\n    country: old_country,\r\n    contact: old_contact,\r\n  } = data || {};\r\n\r\n  const [consignee, setConsignee] = useState(\"\");\r\n  const [contact, setContact] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [postcode, setPostcode] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [country, setCountry] = useState(\"\");\r\n  const [error, setError] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setConsignee(old_consignee);\r\n      setContact(old_contact);\r\n      setAddress(old_address);\r\n      setPostcode(old_postcode);\r\n      setCity(old_city);\r\n      setCountry(old_country);\r\n    }\r\n  }, [data]);\r\n\r\n  const { mutate: add } = useAddAddress();\r\n  const { mutate: update } = useUpdateAddress(id);\r\n\r\n  const handleSubmit = () => {\r\n    const err = {};\r\n    if (consignee === \"\") err.consignee = \"Required\";\r\n    if (contact === \"\") err.contact = \"Required\";\r\n    if (address === \"\") err.address = \"Required\";\r\n    if (city === \"\") err.city = \"Required\";\r\n    if (postcode === \"\") err.postcode = \"Required\";\r\n    if (country === \"\") err.country = \"Required\";\r\n    if (!isEmpty(err)) return setError(err);\r\n    setError({});\r\n\r\n    const body = {};\r\n\r\n    if (consignee !== old_consignee) body.consignee = consignee;\r\n    if (contact !== old_contact) body.contact = contact;\r\n    if (address !== old_address) body.address = address;\r\n    if (postcode !== old_postcode) body.postcode = postcode;\r\n    if (city !== old_city) body.city = city;\r\n    if (country !== old_country) body.country = country;\r\n\r\n    const success = () => {\r\n      setShow(false);\r\n      setConsignee(\"\");\r\n      setContact(\"\");\r\n      setAddress(\"\");\r\n      setPostcode(\"\");\r\n      setCity(\"\");\r\n      setCountry(\"\");\r\n    };\r\n\r\n    if (data) {\r\n      update(body, {\r\n        onSuccess: success,\r\n      });\r\n    } else {\r\n      console.log(body);\r\n      add(body, {\r\n        onSuccess: success,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal show={show} onHide={() => setShow(false)} centered backdrop={true}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{data ? \"Edit\" : \"Add\"} Address</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form>\r\n          <Row>\r\n            <Col>\r\n              <FloatingLabel\r\n                floating\r\n                label=\"Consignee\"\r\n                value={consignee}\r\n                onChange={setConsignee}\r\n                feedback={error.consignee}\r\n                reset={data && (() => setConsignee(old_consignee))}\r\n              />\r\n            </Col>\r\n            <Col>\r\n              <FloatingLabel\r\n                floating\r\n                label=\"Contact\"\r\n                value={contact}\r\n                onChange={setContact}\r\n                feedback={error.contact}\r\n                reset={data && (() => setContact(old_contact))}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <FloatingLabel\r\n                floating\r\n                label=\"Address Line 1\"\r\n                value={address}\r\n                onChange={setAddress}\r\n                feedback={error.address}\r\n                reset={data && (() => setAddress(old_address))}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <FloatingLabel\r\n                floating\r\n                label=\"Zip / Postcode\"\r\n                value={postcode}\r\n                onChange={setPostcode}\r\n                feedback={error.postcode}\r\n                reset={data && (() => setPostcode(old_postcode))}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <FloatingLabel\r\n                floating\r\n                label=\"City\"\r\n                value={city}\r\n                onChange={setCity}\r\n                feedback={error.city}\r\n                reset={data && (() => setCity(old_city))}\r\n              />\r\n            </Col>\r\n\r\n            <Col>\r\n              <FloatingLabel\r\n                floating\r\n                label=\"Country\"\r\n                value={country}\r\n                onChange={setCountry}\r\n                feedback={error.consignee}\r\n                reset={data && (() => setCountry(old_country))}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className=\"d-flex justify-content-end gap-3\">\r\n              <Button variant=\"secondary\" onClick={() => setShow(false)}>\r\n                Cancel\r\n              </Button>\r\n              <Button onClick={handleSubmit}>Save</Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n}\r\n","export default function isEmpty(obj) {\r\n  return Object.keys(obj).length === 0;\r\n}\r\n"],"names":["type","label","feedback","onChange","floating","prefix","suffix","reset","children","props","component","placeholder","isInvalid","e","target","value","files","test","style","marginTop","className","color","onClick","IsConfirm","show","setShow","onConfirm","Modal","onHide","centered","closeButton","Button","variant","Address","useState","edit","setEdit","add","setAdd","editData","setEditData","showDelete","setShowDelete","showDeleteData","setShowDeleteData","useAllAddress","address","data","isLoading","remove","useRemoveAddress","mutate","update","useUpdateAddress","Loading","Container","Row","Col","map","idx","Card","width","consignee","contact","city","postcode","country","md","size","isDefault","id","disabled","AddressForm","old_consignee","old_address","old_city","old_postcode","old_country","old_contact","setConsignee","setContact","setAddress","setPostcode","setCity","setCountry","error","setError","useEffect","useAddAddress","backdrop","err","isEmpty","body","success","onSuccess","console","log","obj","Object","keys","length"],"sourceRoot":""}