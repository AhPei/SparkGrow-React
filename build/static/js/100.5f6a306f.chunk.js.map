{"version":3,"file":"static/js/100.5f6a306f.chunk.js","mappings":"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","sources":["pages/Authentication/Activate.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js"],"sourcesContent":["import { useNavigate, useParams } from \"react-router-dom\";\r\nimport Button from \"../../components/Button\";\r\nimport { useActivation } from \"../../api\";\r\nimport { useEffect } from \"react\";\r\nimport Loading from \"../../components/Loading\";\r\nimport { Card, Container } from \"react-bootstrap\";\r\n\r\nexport default function Activate() {\r\n  const param = useParams();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const {\r\n    isLoading,\r\n    isError,\r\n    error,\r\n    mutate: activate,\r\n  } = useActivation();\r\n\r\n  const active = () => {\r\n    activate({ uid: param.uid, token: param.token });\r\n  };\r\n\r\n  useEffect(() => {\r\n    active();\r\n  }, []);\r\n\r\n  const login = () => navigate(\"/\", { replace: true });\r\n  const resend = () => navigate(\"/resend/activate\");\r\n\r\n  if (isLoading) return <Loading />;\r\n\r\n  const Response = () => {\r\n    if (isError) {\r\n      console.log(error, error.code)\r\n      if (error.code === \"ERR_NETWORK\")\r\n      return (\r\n        <>\r\n            <h4>Network Error</h4>\r\n            <p>Please check your connection.</p>\r\n            <Button onClick={active}>Try Again</Button>\r\n          </>\r\n        );\r\n        return (\r\n          <>\r\n            <h4>Invalid Token</h4>\r\n            <p>you may try to login or resend a activation email.</p>\r\n            <Button onClick={login}>Login</Button>\r\n            <hr />\r\n            <Button onClick={resend}>Resend Activation Email</Button>\r\n          </>\r\n        );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className=\"screen-center\">\r\n      <Card className=\"p-3\">\r\n        <Response />\r\n      </Card>\r\n    </Container>\r\n  );\r\n}\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});"],"names":["Activate","param","useParams","navigate","useNavigate","useActivation","isLoading","isError","error","activate","mutate","active","uid","token","useEffect","login","replace","resend","Response","console","log","code","onClick","className","CardImg","React","ref","bsPrefix","variant","as","Component","props","prefix","useBootstrapPrefix","_jsx","classNames","displayName","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","value","children","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","Card","bg","text","border","body","defaultProps","Object","assign","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay"],"sourceRoot":""}