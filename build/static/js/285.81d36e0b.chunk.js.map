{"version":3,"file":"static/js/285.81d36e0b.chunk.js","mappings":"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","sources":["components/FloatingLabel.js","hooks/useDocumentTitle.js","pages/ResetPassword/ResetPassword.js","pages/ResetPassword/components/ChangePasswordForm.js","utils/isEmpty.js"],"sourcesContent":["import { FloatingLabel, Form, InputGroup } from \"react-bootstrap\";\nimport { VscDebugRestart } from \"react-icons/vsc\";\n\nconst MyFloatingLabel = ({\n  type = \"text\",\n  label = \"Example\",\n  feedback,\n  onChange,\n  floating,\n  prefix,\n  suffix,\n  reset,\n  // pattern = /[^a-zA-Z0-9_ @.]/m,\n  children,\n  ...props\n}) => {\n  const handleChange = (e) => {\n    const { value, files } = e.target;\n    // console.log(\"VALUE>>\", value);\n\n    // if (type === \"currency\") {\n    //   const currencyPattern = /^(?!,$)[\\d,]*\\.?[\\d]+$/;\n    //   if (!currencyPattern.test(value)) return;\n    //   return onChange(value.toCurrency());\n    // }\n\n    if (type === \"file\") return onChange(files);\n\n    const numberPattern = /^\\d+$/i;\n    if (type === \"number\" && !numberPattern.test(value)) return;\n\n    const inputPattern = /[^\\w\\s@.]/i;\n    if (type === \"text\" && inputPattern.test(value)) return;\n\n    const emailInput = /[^\\w@.]/i;\n    if (type === \"email\" && emailInput.test(value)) return;\n\n    onChange(value);\n  };\n\n  const component = (\n    <>\n      <Form.Control\n        {...props}\n        type={type}\n        placeholder={label}\n        isInvalid={!!feedback}\n        onChange={handleChange}\n      />\n      <Form.Control.Feedback\n        type=\"invalid\"\n        style={{ marginTop: floating ? \"0\" : \"2.2rem\" }}\n      >\n        {feedback}\n      </Form.Control.Feedback>\n      {children}\n    </>\n  );\n\n  return (\n    <Form.Group className=\"mb-4\">\n      <InputGroup>\n        {prefix && <InputGroup.Text>{prefix}</InputGroup.Text>}\n        {floating ? (\n          <FloatingLabel label={label}>{component}</FloatingLabel>\n        ) : (\n          component\n        )}\n\n        {suffix && <InputGroup.Text>{suffix}</InputGroup.Text>}\n        {reset && (\n          <InputGroup.Text>\n            <VscDebugRestart\n              color=\"black\"\n              className=\"pointer\"\n              onClick={reset}\n            />\n          </InputGroup.Text>\n        )}\n      </InputGroup>\n    </Form.Group>\n  );\n};\n\nexport default MyFloatingLabel;\n","import { useEffect } from \"react\";\r\n\r\nexport default function useDocumentTitle(title, success = true) {\r\n  useEffect(() => {\r\n    document.title = `Loading...`;\r\n    if (success) document.title = title;\r\n  }, [success]);\r\n}\r\n","import { useNavigate } from \"react-router-dom\";\r\nimport useDocumentTitle from \"../../hooks/useDocumentTitle\";\r\nimport ChangePasswordForm from \"./components/ChangePasswordForm\";\r\nimport { Card, Container } from \"react-bootstrap\";\r\n\r\nexport default function ResetPassword({ title }) {\r\n  useDocumentTitle(title);\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <Container className=\"screen-center\">\r\n      <Card className=\"p-3\" style={{ width: \"30%\" }}>\r\n        <ChangePasswordForm onConfirm={() => navigate(\"/\")} />\r\n      </Card>\r\n    </Container>\r\n  );\r\n}\r\n","import { useState } from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport { useParams } from \"react-router-dom\";\nimport { useChangePassword, useResetPassword } from \"../../../api\";\nimport Button from \"../../../components/Button\";\nimport FloatingLabel from \"../../../components/FloatingLabel\";\nimport isEmpty from \"../../../utils/isEmpty\";\n\nexport default function ChangePasswordForm({ current, onConfirm }) {\n  const [error, setError] = useState({});\n  const [current_password, setCurrentPassword] = useState(\"\");\n  const [new_password, setPassword] = useState(\"\");\n  const [re_new_password, setRePassword] = useState(\"\");\n\n  const { uid, token } = useParams();\n\n  const {\n    isLoading: changeLoading,\n    isSuccess: changeSuccess,\n    mutate: change,\n  } = useChangePassword();\n  const {\n    isLoading: resetLoading,\n    isSuccess: resetSuccess,\n    mutate: reset,\n  } = useResetPassword();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    let isError = {};\n\n    if (current && !current_password) isError.current_password = \"Required\";\n    if (!new_password) isError.new_password = \"Required\";\n    if (!re_new_password) isError.re_new_password = \"Required\";\n\n    if (!isEmpty(isError)) return setError(isError);\n\n    if (new_password !== re_new_password)\n      return setError({ re_new_password: \"Password does not match!\" });\n\n    setError({});\n\n    const error = (err) => {\n      const data = err.response.data;\n      for (const [key, val] of Object.entries(data))\n        setError((prev) => ({ ...prev, [key]: val[0] }));\n    };\n\n    if (current) {\n      change(\n        { current_password, new_password, re_new_password },\n        { onError: error }\n      );\n    } else {\n      reset({ uid, token, new_password, re_new_password }, { onError: error });\n    }\n  };\n\n  return (\n    <>\n      <Row>\n        <Col>\n          <h4>{current ? \"Change\" : \"Reset\"} Password</h4>\n        </Col>\n      </Row>\n      {current && (\n        <FloatingLabel\n          type=\"password\"\n          label=\"Current Password\"\n          value={current_password}\n          onChange={setCurrentPassword}\n          feedback={error.current_password}\n          disabled={\n            changeLoading || changeSuccess || resetSuccess || resetLoading\n          }\n        />\n      )}\n      <FloatingLabel\n        type=\"password\"\n        label=\"New Password\"\n        value={new_password}\n        onChange={setPassword}\n        feedback={error.new_password}\n        disabled={\n          changeLoading || changeSuccess || resetSuccess || resetLoading\n        }\n      />\n      <FloatingLabel\n        type=\"password\"\n        label=\"Confirm New Password\"\n        value={re_new_password}\n        onChange={setRePassword}\n        feedback={error.re_new_password}\n        disabled={\n          changeLoading || changeSuccess || resetSuccess || resetLoading\n        }\n      />\n      <Row>\n        <Col>\n          {error?.token && <span className=\"error\">{error.token}</span>}\n        </Col>\n      </Row>\n      <Row>\n        <Col className=\"d-flex justify-content-end gap-3\">\n          <Button\n            variant=\"success\"\n            onClick={(e) => handleSubmit(e)}\n            loading={\n              changeLoading || changeSuccess || resetSuccess || resetLoading\n            }\n          >\n            {current ? \"Change\" : \"Reset\"} Password\n          </Button>\n        </Col>\n      </Row>\n    </>\n  );\n}\n","export default function isEmpty(obj) {\r\n  return Object.keys(obj).length === 0;\r\n}\r\n"],"names":["type","label","feedback","onChange","floating","prefix","suffix","reset","children","props","component","placeholder","isInvalid","e","target","value","files","test","style","marginTop","className","color","onClick","useDocumentTitle","title","success","useEffect","document","ResetPassword","navigate","useNavigate","width","onConfirm","ChangePasswordForm","current","useState","error","setError","current_password","setCurrentPassword","new_password","setPassword","re_new_password","setRePassword","useParams","uid","token","useChangePassword","changeLoading","isLoading","changeSuccess","isSuccess","change","mutate","useResetPassword","resetLoading","resetSuccess","disabled","variant","preventDefault","isError","isEmpty","err","data","response","key","val","prev","Object","entries","onError","handleSubmit","loading","obj","keys","length"],"sourceRoot":""}